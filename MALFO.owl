Prefix(:=<https://www.w3id.org/MALFO#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(malfo:=<https://www.w3id.org/MALFO>)


Ontology(<https://www.w3id.org/MALFO>
<https://www.w3id.org/MALFO>
Annotation(rdfs:comment "Malfunction Ontology: ontology about failure-related happenings")

Declaration(Class(<http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>))
Declaration(Class(:DownState))
Declaration(Class(:Event))
Declaration(Class(:Failure))
Declaration(Class(:FailureCondition))
Declaration(Class(:FailureMechanism))
Declaration(Class(:Fault))
Declaration(Class(:FunctionCompatible))
Declaration(Class(:Malfunction))
Declaration(Class(:MalfunctionProcess))
Declaration(Class(:MereSymptom))
Declaration(Class(:NonPerformanceEvent))
Declaration(Class(:Occurrent))
Declaration(Class(:Process))
Declaration(Class(:State))
Declaration(ObjectProperty(:achieves))
Declaration(ObjectProperty(:allows))
Declaration(ObjectProperty(:causeOf))
Declaration(ObjectProperty(:disallows))
Declaration(ObjectProperty(:facilPreconditionFor))
Declaration(ObjectProperty(:functionOf_sys))
Declaration(ObjectProperty(:hasPhysicalConseq))
Declaration(ObjectProperty(:incompatibleWith))
Declaration(ObjectProperty(:internalTo))
Declaration(ObjectProperty(:maintains))
Declaration(ObjectProperty(:posCauseOf))
Declaration(ObjectProperty(:posCauseOf_cross))
Declaration(ObjectProperty(:prevPreconditionFor))
Declaration(ObjectProperty(:prevents))
Declaration(AnnotationProperty(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled>))

############################
#   Object Properties
############################

# Object Property: :achieves (:achieves)

SubObjectPropertyOf(:achieves :causeOf)
SubObjectPropertyOf(:achieves :posCauseOf)
ObjectPropertyDomain(:achieves ObjectUnionOf(:Event :Process :State))
ObjectPropertyRange(:achieves ObjectUnionOf(:Process :State))

# Object Property: :allows (:allows)

SubObjectPropertyOf(:allows :causeOf)
SubObjectPropertyOf(:allows :posCauseOf)
ObjectPropertyDomain(:allows ObjectUnionOf(:Event :Process))
ObjectPropertyRange(:allows ObjectUnionOf(:Event :Process :State))

# Object Property: :causeOf (:causeOf)

ObjectPropertyDomain(:causeOf :Occurrent)
ObjectPropertyRange(:causeOf :Occurrent)

# Object Property: :disallows (:disallows)

SubObjectPropertyOf(:disallows :causeOf)
ObjectPropertyDomain(:disallows ObjectUnionOf(:Event :Process))
ObjectPropertyRange(:disallows ObjectUnionOf(:Event :Process :State))

# Object Property: :facilPreconditionFor (:facilPreconditionFor)

SubObjectPropertyOf(:facilPreconditionFor :posCauseOf)
ObjectPropertyDomain(:facilPreconditionFor :State)
ObjectPropertyRange(:facilPreconditionFor ObjectUnionOf(:Event :Process :State))

# Object Property: :hasPhysicalConseq (:hasPhysicalConseq)

SubObjectPropertyOf(:hasPhysicalConseq :causeOf)
SubObjectPropertyOf(:hasPhysicalConseq :posCauseOf)
TransitiveObjectProperty(:hasPhysicalConseq)
ObjectPropertyDomain(:hasPhysicalConseq :Occurrent)
ObjectPropertyRange(:hasPhysicalConseq :Occurrent)

# Object Property: :posCauseOf (:posCauseOf)

SubObjectPropertyOf(:posCauseOf :posCauseOf_cross)

# Object Property: :posCauseOf_cross (:posCauseOf_cross)

TransitiveObjectProperty(:posCauseOf_cross)

# Object Property: :prevPreconditionFor (:prevPreconditionFor)

ObjectPropertyDomain(:prevPreconditionFor :State)
ObjectPropertyRange(:prevPreconditionFor ObjectUnionOf(:Event :Process :State))

# Object Property: :prevents (:prevents)

SubObjectPropertyOf(:prevents :causeOf)
ObjectPropertyDomain(:prevents ObjectUnionOf(:Event :Process :State))
ObjectPropertyRange(:prevents ObjectUnionOf(:Process :State))



############################
#   Classes
############################

# Class: <http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening> (<http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>)

SubClassOf(<http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening> :Occurrent)

# Class: :DownState (:DownState)

EquivalentClasses(:DownState ObjectIntersectionOf(:State ObjectComplementOf(:Fault) ObjectComplementOf(:FunctionCompatible)))

# Class: :Event (:Event)

SubClassOf(:Event :Occurrent)

# Class: :Failure (:Failure)

EquivalentClasses(:Failure ObjectIntersectionOf(:Event :Malfunction ObjectSomeValuesFrom(:achieves :Fault)))
DisjointClasses(:Failure :NonPerformanceEvent)

# Class: :FailureCondition (:FailureCondition)

SubClassOf(:FailureCondition :FunctionCompatible)
SubClassOf(:FailureCondition :State)

# Class: :FailureMechanism (:FailureMechanism)

EquivalentClasses(:FailureMechanism ObjectIntersectionOf(:FunctionCompatible ObjectUnionOf(:Event :Process) ObjectSomeValuesFrom(:posCauseOf_cross :Failure)))

# Class: :Fault (:Fault)

SubClassOf(:Fault :Malfunction)
SubClassOf(:Fault :State)
SubClassOf(:Fault ObjectSomeValuesFrom(ObjectInverseOf(:achieves) <http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>))
SubClassOf(:Fault ObjectSomeValuesFrom(ObjectInverseOf(:internalTo) <http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>))

# Class: :FunctionCompatible (:FunctionCompatible)

SubClassOf(:FunctionCompatible <http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>)
DisjointClasses(:FunctionCompatible :Malfunction)

# Class: :Malfunction (:Malfunction)

EquivalentClasses(:Malfunction ObjectComplementOf(:FunctionCompatible))
SubClassOf(:Malfunction <http://www.loa.istc.cnr.it/engineering-domain/FailureRelatedHappening>)

# Class: :MalfunctionProcess (:MalfunctionProcess)

EquivalentClasses(:MalfunctionProcess ObjectIntersectionOf(:Malfunction :Process))
SubClassOf(:MalfunctionProcess :Malfunction)
SubClassOf(:MalfunctionProcess :Process)

# Class: :MereSymptom (:MereSymptom)

EquivalentClasses(:MereSymptom ObjectIntersectionOf(:FunctionCompatible ObjectComplementOf(ObjectSomeValuesFrom(:causeOf :Failure)) ObjectSomeValuesFrom(ObjectInverseOf(:causeOf) :Fault)))

# Class: :NonPerformanceEvent (:NonPerformanceEvent)

EquivalentClasses(:NonPerformanceEvent ObjectIntersectionOf(:Event :Malfunction ObjectComplementOf(:Failure)))

# Class: :Process (:Process)

SubClassOf(:Process :Occurrent)

# Class: :State (:State)

SubClassOf(:State :Occurrent)
SubClassOf(:State ObjectAllValuesFrom(:achieves :State))
SubClassOf(:State ObjectAllValuesFrom(:prevents :State))


SubClassOf(ObjectIntersectionOf(:FunctionCompatible :State ObjectSomeValuesFrom(:posCauseOf_cross :Failure)) :FailureCondition)
DisjointClasses(:DownState :Fault :FunctionCompatible)
DisjointClasses(:Event :Process :State)
SubObjectPropertyOf(ObjectPropertyChain(:achieves :facilPreconditionFor) :allows)
SubObjectPropertyOf(ObjectPropertyChain(:achieves :hasPhysicalConseq) :achieves)
SubObjectPropertyOf(ObjectPropertyChain(:allows :hasPhysicalConseq) :allows)
SubObjectPropertyOf(ObjectPropertyChain(:disallows :hasPhysicalConseq) :disallows)
SubObjectPropertyOf(ObjectPropertyChain(:facilPreconditionFor :hasPhysicalConseq) :facilPreconditionFor)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :achieves) :achieves)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :allows) :allows)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :disallows) :disallows)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :facilPreconditionFor) :facilPreconditionFor)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :prevPreconditionFor) :prevPreconditionFor)
SubObjectPropertyOf(ObjectPropertyChain(:hasPhysicalConseq :prevents) :prevents)
SubObjectPropertyOf(ObjectPropertyChain(:incompatibleWith :prevPreconditionFor) :incompatibleWith)
SubObjectPropertyOf(ObjectPropertyChain(:maintains :facilPreconditionFor) :allows)
SubObjectPropertyOf(ObjectPropertyChain(:prevPreconditionFor :hasPhysicalConseq) :prevPreconditionFor)
SubObjectPropertyOf(ObjectPropertyChain(:prevPreconditionFor :incompatibleWith) :incompatibleWith)
SubObjectPropertyOf(ObjectPropertyChain(:prevents :hasPhysicalConseq) :prevents)
SubObjectPropertyOf(ObjectPropertyChain(:prevents :prevPreconditionFor) :allows)
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment ""^^xsd:string) Annotation(rdfs:label "failureCondition-partial-sufficient-implication"^^xsd:string) Body(ClassAtom(:FunctionCompatible Variable(:x)) ClassAtom(:Failure Variable(:y)) ClassAtom(:State Variable(:x)) ObjectPropertyAtom(:prevPreconditionFor Variable(:x) Variable(:z)) ObjectPropertyAtom(:disallows Variable(:z) Variable(:y)))Head(ClassAtom(:FailureCondition Variable(:x))))
DLSafeRule(Annotation(<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean) Annotation(rdfs:comment ""^^xsd:string) Annotation(rdfs:label "fault-sufficient-implication"^^xsd:string) Body(ObjectPropertyAtom(:achieves Variable(:z) Variable(:x)) ClassAtom(:Malfunction Variable(:x)) ObjectPropertyAtom(:internalTo Variable(:z) Variable(:x)) ClassAtom(:State Variable(:x)))Head(ClassAtom(:Fault Variable(:x))))
)